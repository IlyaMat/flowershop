<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">


    <context:annotation-config/>
    <context:component-scan base-package="com.accenture.flowershop.*"/>

    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

    <jee:jndi-lookup id="connectionFactory" jndi-name="jms/connectionFactory"/>
    <jee:jndi-lookup id="outQueue" jndi-name="jms/outQueue"/>
    <jee:jndi-lookup id="inQueue" jndi-name="jms/inQueue"/>

    <!-- Service implementor bean -->
<!--
    <bean id="FlowersStockWebService" class="com.accenture.flowershop.be.business.ws.FlowersStockWebServiceImpl" />

    <jaxws:endpoint id="FlowersStockWebService1" implementor="#flowersStockWebService"
        address="/FlowersStockWebService"/>

    <jaxws:client id="FlowerStockWebServiceClient"
                  serviceClass="com.accenture.flowershop.be.business.ws.FlowersStockWebService"
                  address="http://localhost:1111/ws/FlowerStockWebService" />
-->


    <bean id="dataSource" name="jdbc/usDS" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>org.h2.Driver</value>
        </property>
        <property name="url">
            <value>jdbc:h2:~/flowershop</value>
        </property>
        <property name="username">
            <value>sa</value>
        </property>
        <property name="password">
            <value></value>
        </property>
    </bean>

    <bean id="flyway" class="org.flywaydb.core.Flyway" init-method="migrate">
        <property name="dataSource" ref="dataSource"/>
        <property name="locations" value="db"/>
            <!--<array>
                <value>db</value>
            </array>
        </property>-->
        <property name="baselineOnMigrate" value="false"/>
        <property name="outOfOrder" value="true"/>
        <property name="sqlMigrationPrefix" value="v"/>
        <property name="sqlMigrationSeparator" value="__"/>
        <property name="placeholderPrefix" value="@{"/>
        <property name="placeholderSuffix" value="}"/>
    </bean>

    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          depends-on="flyway">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan">
            <list>
                <value>com.accenture.flowershop.be.entity.*</value>
            </list>
        </property>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="database" value="ORACLE"/>
                <property name="generateDdl" value="false"/>
                <property name="showSql" value="true"/>
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller" />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="jpaDialect" ref="jpaDialect"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" />


</beans>